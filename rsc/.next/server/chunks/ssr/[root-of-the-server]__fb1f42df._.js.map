{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":["file:///Users/murad-sh/Private/personal/Thesis/rsc/src/lib/axios-instance.ts"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.NEXT_PUBLIC_API_URL;\n\nconst axiosInstance = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\nexport default axiosInstance;\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM;AAEN,MAAM,gBAAgB,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACjC,SAAS;IACT,SAAS;QACP,gBAAgB;IAClB;AACF;uCAEe","debugId":null}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":["file:///Users/murad-sh/Private/personal/Thesis/rsc/src/components/layout/layout.tsx"],"sourcesContent":["'use client';\n\nimport { Toaster } from 'sonner';\nimport { SWRConfig } from 'swr';\nimport axiosInstance from '@/lib/axios-instance';\nimport Header from './Header';\nimport Footer from './Footer';\n\nexport default function Layout({ children }: { children: React.ReactNode }) {\n  return (\n    <div className=\"flex min-h-screen flex-col space-y-6\">\n      <Header />\n      <SWRConfig\n        value={{\n          fetcher: (url: string) =>\n            axiosInstance.get(url).then((res) => res.data),\n        }}\n      >\n        <main className=\"flex w-full flex-1 flex-col overflow-hidden\">\n          {children}\n        </main>\n      </SWRConfig>\n      <Toaster richColors className=\"mb-14\" />\n      <Footer />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;;;;;;;;;AAJA;;;;;;;AAQe,SAAS,OAAO,EAAE,QAAQ,EAAiC;IACxE,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;;;;;0BACD,8OAAC,8JAAA,CAAA,YAAS;gBACR,OAAO;oBACL,SAAS,CAAC,MACR,+HAAA,CAAA,UAAa,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,MAAQ,IAAI,IAAI;gBACjD;0BAEA,cAAA,8OAAC;oBAAK,WAAU;8BACb;;;;;;;;;;;0BAGL,8OAAC,wIAAA,CAAA,UAAO;gBAAC,UAAU;gBAAC,WAAU;;;;;;0BAC9B,8OAAC;;;;;;;;;;;AAGP","debugId":null}}]
}